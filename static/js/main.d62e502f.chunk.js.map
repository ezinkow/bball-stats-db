{"version":3,"sources":["components/Header.js","components/StatsButtons.js","components/PlayerPage.js","components/SearchForm.js","components/ApiResultsList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","syle","color","textDecoration","StatsButtons","handleTodaysStatsSubmit","handleWeeksStatsSubmit","year","handleYearChange","handleOnThisDate","for","placeholder","type","value","maxLength","minLength","onChange","size","onClick","useStyles","makeStyles","table1","minWidth","table2","maxWidth","PlayerPage","apiResponse","useState","statsDisplay","setStatsDisplay","setYear","game","setGame","params","useParams","player","find","id","Number","playerId","today","moment","format","todayNoYear","weekAgo","subtract","onThisDate","console","log","apiCallToday","apiCallWeek","apiCallOnThisDate","event","a","preventDefault","fetch","response","json","results","data","handleGetGameScore","gameId","apiGame","newArray","push","gameStats","length","map","gameI","visitor_team","full_name","visitor_team_score","home_team","home_team_score","classes","playerBio","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","first_name","last_name","TableBody","align","height_feet","height_inches","weight_pounds","position","team","stats","stat","date","pts","fgm","fga","fg_pct","fg3m","fg3a","fg3_pct","reb","ast","stl","blk","turnover","min","root","Grid","container","spacing","item","xs","target","SearchForm","nameSearch","handleNameChange","handleSubmit","width","maxHeight","color1","backgroundColor","color2","color3","ApiResultsList","stickyHeader","api","scope","to","App","setNameSearch","setApiResponse","useEffect","apiCall","style","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62e502f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n    return (\n        <>\n            <div className=\"header\">\n                <div className=\"homeBtn\">\n                    <a href=\"/\" syle={{color:\"white\", textDecoration: 'none'}}>HOME</a>\n                </div>\n                <div className=\"mainText\">\n                    <h1>WELCOME BASKETBALL FANS</h1>\n                    <h3>Get stats for any player in our database</h3>\n                </div>\n            </div>\n        </>\n    );\n}","export default function StatsButtons({ handleTodaysStatsSubmit, handleWeeksStatsSubmit, year, handleYearChange, handleOnThisDate }) {\n    return (\n        <div className=\"statsButtons\">\n            <label for=\"year\" className=\"buttons\">On this day in:</label>\n            <input\n                placeholder=\"YYYY\"\n                type=\"text\"\n                value={year}\n                maxLength='4'\n                minLength='4'\n                onChange={handleYearChange}\n                size='4'\n                className=\"buttons\"\n                \n            />\n            <input\n                type=\"submit\"\n                value=\"On this date\"\n                onClick={handleOnThisDate}\n                className=\"buttons\"\n            />|||\n            <input\n                type=\"submit\"\n                value=\"Today's stats\"\n                onClick={handleTodaysStatsSubmit}\n                className=\"buttons\"\n            />\n            <input\n                type=\"submit\"\n                value=\"Stats over last week\"\n                onClick={handleWeeksStatsSubmit}\n                className=\"buttons\"\n            />\n\n        </div>\n    )\n}","import {\n    useParams\n} from 'react-router-dom'\nimport React, { useState } from \"react\";\nimport moment from 'moment'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport StatsButtons from './StatsButtons'\n\nconst useStyles = makeStyles({\n    table1: {\n        minWidth: 650,\n    },\n    table2: {\n        maxWidth: 600,\n    }\n});\n\nfunction PlayerPage({ apiResponse }) {\n    const [statsDisplay, setStatsDisplay] = useState({})\n    const [year, setYear] = useState(\"\")\n    const [game, setGame] = useState([])\n\n\n    const params = useParams()\n    const player = apiResponse.find(id => id.id === Number(params.id))\n    if (player) {\n        var playerId = player.id\n    }\n    const today = moment().format(\"YYYY-MM-DD\")\n    const todayNoYear = moment().format(\"MM-DD\")\n    const weekAgo = moment().subtract(7, 'd').format(\"YYYY-MM-DD\")\n    const onThisDate = `${year}-${todayNoYear}`\n    console.log('onthisdate', onThisDate)\n    const apiCallToday = `https://www.balldontlie.io/api/v1/stats?player_ids[]=${playerId}&dates[]=${today}`\n    const apiCallWeek = 'https://www.balldontlie.io/api/v1/stats?player_ids[]=' + playerId + '&start_date=' + weekAgo + '&end_date=' + today\n    const apiCallOnThisDate = `https://www.balldontlie.io/api/v1/stats?player_ids[]=${playerId}&dates[]=${onThisDate}`\n    console.log('playerid', player)\n    console.log('apiresponseplayer', apiResponse)\n\n    const handleTodaysStatsSubmit = async (event) => {\n        event.preventDefault()\n        console.log('today', today)\n        console.log('fetch', apiCallToday)\n\n        try {\n            const response = await fetch(apiCallToday)\n            const results = await response.json()\n            console.log('results', results)\n            console.log('results.data', results.data)\n            setStatsDisplay(results.data)\n            console.log('statsDisplay', statsDisplay)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const handleWeeksStatsSubmit = async (event) => {\n        event.preventDefault()\n\n        try {\n            const response = await fetch(apiCallWeek)\n            const results = await response.json()\n            console.log('results', results)\n            console.log(apiCallWeek)\n            setStatsDisplay(results.data)\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const handleYearChange = event => {\n        console.log(event.target.value)\n        setYear(event.target.value)\n        console.log(year)\n    }\n\n    const handleOnThisDate = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch(apiCallOnThisDate)\n            const results = await response.json()\n            console.log('results', results.data)\n            console.log(apiCallOnThisDate)\n            setStatsDisplay(results.data)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const handleGetGameScore = async () => {\n        const gameId = statsDisplay[0].game.id\n        console.log('gameid', gameId)\n        const apiGame = `https://www.balldontlie.io/api/v1/games/${gameId}`\n        console.log('game', apiGame)\n        try {\n            const response = await fetch(apiGame)\n            const results = await response.json()\n            console.log('results', results)\n            const newArray = []\n            newArray.push(results)\n            setGame(newArray)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    console.log('game', game)\n\n    const gameStats = game.length > 0 ? game.map(gameI =>\n        <>\n        {gameI.visitor_team.full_name}: {gameI.visitor_team_score}<br></br>\n        {gameI.home_team.full_name}: {gameI.home_team_score}\n        </>\n        ) : \"\"\n\n\n    // const yesterday = moment().subtract(1, 'd').format(\"YYYY-MM-DD\")\n    // console.log('1 week', weekAgo)\n    // const apiCall = \n    const classes = useStyles();\n\n    if (player) {\n        var playerBio =\n            <TableContainer component={Paper}>\n                <Table className={classes.table1} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell><h1>{player.first_name} {player.last_name}</h1></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow key={player.id}>\n                            <TableCell align=\"left\">Height: {player.height_feet}'{player.height_inches}\"</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell align=\"left\">Weight: {player.weight_pounds}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell align=\"left\">Position: {player.position}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell align=\"left\">Team: {player.team.full_name}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n    }\n\n    const stats = statsDisplay.length > 0 ? statsDisplay.map(stat =>\n        <TableContainer component={Paper}>\n            <Table className={classes.table2} size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date: {stat.game.date}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Points:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.pts}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            FG:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.fgm}/{stat.fga} ({stat.fg_pct}%)\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            3pt FG:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.fg3m}/{stat.fg3a} ({stat.fg3_pct}%)\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Rebounds:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.reb}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Assists:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.ast}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Steals:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.stl}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Blocks:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.blk}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Turnovers:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.turnover}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            Minutes played:\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {stat.min}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">\n                            <button onClick={handleGetGameScore}>Get game score</button>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                           {gameStats}\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>)\n        : \"\"\n\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    {playerBio}\n                </Grid>\n                <Grid item xs={6}>\n                    <StatsButtons\n                        handleTodaysStatsSubmit={handleTodaysStatsSubmit}\n                        handleWeeksStatsSubmit={handleWeeksStatsSubmit}\n                        handleYearChange={handleYearChange}\n                        handleOnThisDate={handleOnThisDate}\n                        year={year}\n                    />\n                    {stats}\n                </Grid>\n            </Grid>\n        </div >\n    )\n\n}\n\nexport default PlayerPage","export default function SearchForm({ nameSearch, handleNameChange, handleSubmit }) {\n    return (\n        <div className=\"searchForm\">\n            <form>\n                <label for='player name'><h3>Search for player to get stats:  </h3></label>\n                <input\n                    placeholder=\"Player Name\"\n                    type=\"text\"\n                    value={nameSearch}\n                    onChange={handleNameChange}\n                />\n                    <input type=\"submit\" value=\"Submit\" onClick={handleSubmit} />\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport {\n    Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 500,\n    },\n    color1: {\n        backgroundColor: \"purple\"\n    },\n    color2: {\n        backgroundColor: \"yellow\"\n    },\n    color3: {\n        backgroundColor: \"grey\"\n    }\n});\n\nexport default function ApiResultsList({ apiResponse }) {\n    const classes = useStyles();\n    console.log('apilist', apiResponse)\n    if (apiResponse.length > 0) {\n        return (\n            <Grid item xs={8}>\n                <Paper className={classes.root}>\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader size=\"small\" aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"left\">Name</TableCell>\n                                    <TableCell align=\"left\">Team</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {apiResponse.map((api) => (\n                                    <TableRow key={api.id}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Link to={`/results/${api.id}`}>\n                                                {api.first_name} {api.last_name}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell>\n                                            {api.team.full_name}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Paper>\n                {/* <input\n                type=\"submit\"\n                value=\"Next Page\"\n                onClick={handleNextPage} /> */}\n            </Grid>\n        )\n    }\n    else {\n        return (\n            <>\n            </>)\n    }\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from './components/Header';\nimport './App.css';\nimport PlayerPage from './components/PlayerPage.js'\nimport SearchForm from \"./components/SearchForm\";\nimport ApiResultsList from './components/ApiResultsList'\n\nfunction App() {\n  const [nameSearch, setNameSearch] = useState(\"\")\n  const [apiResponse, setApiResponse] = useState([])\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNameSearch(event.target.value);\n  };\n  useEffect(() => {\n    console.log(nameSearch)\n  })\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const apiCall = `https://www.balldontlie.io/api/v1/players?search=${nameSearch}&per_page=100`\n\n    try {\n      const response = await fetch(apiCall)\n      const results = await response.json()\n      console.log('results', results)\n      console.log('api call', apiCall)\n      setApiResponse(results.data)\n    } catch (err) {\n      console.log(err)\n    }\n    setNameSearch(\"\")\n    return (\n      <ApiResultsList\n        apiResponse={apiResponse} />\n    )\n  }\n\n  return (\n    <Router>\n\n      <nav>\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n          <Header />\n        </Link>\n      </nav>\n      <div className=\"container\">\n        <Switch>\n          <Route path='/results/:id'>\n            <PlayerPage\n              apiResponse={apiResponse} />\n          </Route>\n          <Route path='/bball-stats-db'>\n            <SearchForm\n              nameSearch={nameSearch}\n              handleNameChange={handleNameChange}\n              handleSubmit={handleSubmit}\n              apiResponse={apiResponse}\n            />\n            <ApiResultsList\n              apiResponse={apiResponse} />\n          </Route>\n          <Route exact path=\"/\">\n            <SearchForm\n              nameSearch={nameSearch}\n              handleNameChange={handleNameChange}\n              handleSubmit={handleSubmit}\n              apiResponse={apiResponse}\n            />\n            <ApiResultsList\n              apiResponse={apiResponse} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}